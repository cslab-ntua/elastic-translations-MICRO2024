# Disable defrag by effectively disabling khugepaged and turning-off proactive compaction

source "${BASE}/env/base.env"

# This should disable compaction for costly orders for most case, even for direct reclaim
echo 1000 > "${PROCVM}/extfrag_threshold"

# Just in case, also disable kcompactd proactive compaction
[ -f "${PROCVM}/compaction_proactiveness" ] && \
	echo 0 > "${PROCVM}/compaction_proactiveness"

# This should disable khugepaged scanning
echo 1 > "${KHUGE_SYSFS}/pages_to_scan"

# Just in case, make sure khugepaged sleeps (effectively) for ever
echo $(( 3600 * 1000 ))> "${KHUGE_SYSFS}/scan_sleep_millisecs"
echo $(( 3600 * 1000 )) > "${KHUGE_SYSFS}/alloc_sleep_millisecs"

# Just in case, prevent khugepaged from entering direct reclaim 
echo 0 > "${KHUGE_SYSFS}/defrag"

# ET-enabled kernels have a knob to disable kcompactd and khugepaged entirely
[ -f "${KHUGE_SYSFS}/kcompactd_enable" ] && \
	echo 0 > "${KHUGE_SYSFS}/kcompactd_enable"
[ -f "${KHUGE_SYSFS}/khugepaged_enable" ] && \
	echo 0 > "${KHUGE_SYSFS}/khugepaged_enable"
[ -f "${COALA_SYSFS}/khugepaged" ] && \
	echo 0 > "${COALA_SYSFS}/khugepaged"

# ET-enabled kernels also allow the resetting of khugepaged stats
echo 0 2>/dev/null > "${KHUGE_SYSFS}/pages_collapsed" || true
echo 0 2>/dev/null > "${KHUGE_SYSFS}/full_scans" || true
