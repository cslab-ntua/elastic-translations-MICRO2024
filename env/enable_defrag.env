# Enable defrag by setting khugepaged and kcompactd knobs
#
# KHUGE_SLEEP: Sets khugepaged scan_sleep_millisec and alloc_sleep_millisecs
# KHUGE_HWK: Enables the Hawkeye "aggressive" khugepaged mode when deciding whether to sleep or not
# NOKCOMPACTD: Disable kcompactd (for ET-enabled kernels)
# COALA_KHUGE: Enable / Disable khugepaged for ET-enabled mm's

source "${BASE}/env/base.env"

# Reset the compaction thresholds
echo 500 > "${PROCVM}/extfrag_threshold"
[ -f "${PROCVM}/compaction_proactiveness" ] && \
	echo 20 > "${PROCVM}/compaction_proactiveness"

# Allow khugepaged to enter direct reclaim / compaction
echo 1 > "${KHUGE_SYSFS}/defrag"

# Default values
[ -z "${KHUGE_SLEEP}" ] && export KHUGE_SLEEP=10000
[ -z "${KHUGE_HWK}" ] && export KHUGE_HWK=0

# Enable khuge 'hawkeye' fallback
[ -f "${KHUGE_SYSFS}/khugepaged_hwk" ] && \
	echo "${KHUGE_HWK}" > "${KHUGE_SYSFS}/khugepaged_hwk"

# Reset stats
echo 0 2>/dev/null > "${KHUGE_SYSFS}/pages_collapsed" || true
echo 0 2>/dev/null > "${KHUGE_SYSFS}/full_scans" || true

# Set khuge freq
echo "${KHUGE_SLEEP}" > "${KHUGE_SYSFS}/scan_sleep_millisecs"
echo "${KHUGE_SLEEP}" > "${KHUGE_SYSFS}/alloc_sleep_millisecs"

# Try to compact 16 HPMDs each scan == 32MiB 
echo $(( 8192 )) > "${KHUGE_SYSFS}/pages_to_scan"

# Enable kcompactd if requested
if [ -f "${KHUGE_SYSFS}/kcompactd_enable" ]; then
	[ -z "${NOKCOMPACTD}" ] && echo 1 > "${KHUGE_SYSFS}/kcompactd_enable"
fi

# Enable khugepaged for COALAPaging
if [ -f "${COALA_SYSFS}/khugepaged" ]; then
	if [ ! -z "${COALA_KHUGE}" ]; then
		echo 1 > "${COALA_SYSFS}/khugepaged"
	else
		echo 0 > "${COALA_SYSFS}/khugepaged"
	fi
fi

[ -f "${KHUGE_SYSFS}/khugepaged_enable" ] && \
	echo 1 > "${KHUGE_SYSFS}/khugepaged_enable"

true
